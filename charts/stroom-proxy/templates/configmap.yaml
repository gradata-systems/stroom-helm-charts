apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "stroom-proxy.fullname" . }}
  labels:
    {{- include "stroom-proxy.labels" . | nindent 4 }}
data:
  config.yml: |
    server:
      applicationContextPath: /
      adminContextPath: /proxyAdmin
      applicationConnectors:
        - type: http
          port: {{ .Values.ports.app }}
      adminConnectors:
        - type: http
          port: {{ .Values.ports.admin }}
      requestLog:
        appenders:
          - type: file
            currentLogFilename: /stroom-proxy/logs/access/access.log
            threshold: ALL
            queueSize: 256
            discardingThreshold: 0
            archive: true
            archivedLogFilenamePattern: /stroom-proxy/logs/access/access-%d{yyyy-MM-dd'T'HH:mm}.log.gz
            archivedFileCount: 100
            timeZone: UTC
            logFormat: '%h %l "%u" [%t] "%r" %s %b "%i{Referer}" "%i{User-Agent}" %D'

    logging:
      level: {{ .Values.loggingLevel }}
      loggers:
        stroom: INFO
        io.dropwizard: INFO
        org.eclipse.jetty: INFO
        org.flywaydb: INFO
        "receive":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: /stroom-proxy/logs/receive/receive.log
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: true
              archivedLogFilenamePattern: /stroom-proxy/logs/receive/receive-%d{yyyy-MM-dd'T'HH:mm}.log.gz
              archivedFileCount: 100
              timeZone: UTC
              logFormat: "%-6level [%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}] [%t] %logger - %X{code} %msg %n"
        "send":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: /stroom-proxy/logs/send/send.log
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: true
              archivedLogFilenamePattern: /stroom-proxy/logs/send/send-%d{yyyy-MM-dd'T'HH:mm}.log.gz
              archivedFileCount: 100
              timeZone: UTC
              logFormat: "%-6level [%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}] [%t] %logger - %X{code} %msg %n"

      appenders:
        # stdout for docker
        # Comment out for non-dockered environments
        - type: console
          logFormat: "%highlight(%-6level) [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%green(%t)] %cyan(%logger) - %X{code} %msg %n"
          timeZone: UTC
          # Minute rolled files for stroom/datafeed, will be curl'd/deleted by stroom-log-sender
        - type: file
          currentLogFilename: /stroom-proxy/logs/app/app.log
          threshold: ALL
          queueSize: 256
          discardingThreshold: 0
          archive: true
          archivedLogFilenamePattern: /stroom-proxy/logs/app/app-%d{yyyy-MM-dd'T'HH:mm}.log.gz
          # One week using minute files
          archivedFileCount: 10080
          timeZone: UTC
          logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"

    proxyConfig:
      aggregator:
        {{- with .Values.repository.aggregation }}
        enabled: {{ .enabled }}
        aggregationFrequency: {{ .frequency | quote }}
        maxAggregateAge: {{ .maxAge | quote }}
        maxItemsPerAggregate: {{ .maxItems }}
        maxUncompressedByteSize: {{ .maxUncompressedSizeBytes | quote }}
        {{- end }}

      feedStatus:
        url: "{{ .Values.stroom.apiScheme }}://{{ .Values.stroom.host }}:{{ .Values.stroom.port }}/api/feedStatus/v1"
        apiKey: "${FEED_STATUS_API_KEY:-}"

      {{- if .Values.forwarding.enabled }}
      forwardDestinations:
        - type: post
          name: stroom
          forwardUrl: "{{ .Values.forwarding.scheme }}://{{ .Values.stroom.host }}:{{ .Values.stroom.port }}/stroom/noauth/datafeed"
          enabled: {{ .Values.forwarding.enabled }}
          sslConfig:
            keyStorePath: "${FORWARDING_KEYSTORE_PATH:-/stroom-proxy/certs/client.jks}"
            keyStorePassword: "${FORWARDING_KEYSTORE_PASSWORD:-password}"
            keyStoreType: {{ .Values.clientKeyStore.type | quote }}
            trustStorePath: "${FORWARDING_TRUSTSTORE_PATH:-/stroom-proxy/certs/ca.jks}"
            trustStorePassword: "${FORWARDING_TRUSTSTORE_PASSWORD:-password}"
            trustStoreType: {{ .Values.trustStore.type | quote }}
            hostnameVerificationEnabled: {{ .Values.restClient.verifyHostname }}
      {{- end }}

      path:
        home: "/stroom-proxy/"
        temp: "/tmp/stroom-proxy"

      logStream:
        metaKeys: "guid,feed,system,environment,remotehost,remoteaddress,remotedn,remotecertexpiry"

      db:
        dbDir: {{ .Values.db.dbDir }}

      repository:
        {{- with .Values.repository }}
        repoDir: {{ .repoDir }}
        storingEnabled: {{ .storingEnabled }}
        {{- end }}

      # restClient is used for making feed status REST calls
      restClient:
        {{- with .Values.restClient }}
        chunkedEncodingEnabled: true
        connectionTimeout: {{ .connectionTimeout | quote }}
        {{- end }}
        tls:
          verifyHostname: {{ .Values.restClient.verifyHostname }}
          keyStorePath: "${STROOM_PROXY_CLIENT_KEYSTORE_PATH:-/stroom-proxy/certs/client.jks}"
          keyStorePassword: "${STROOM_PROXY_CLIENT_KEYSTORE_PASSWORD:-password}"
          keyStoreType: {{ .Values.clientKeyStore.type | quote }}
          trustStorePath: "${STROOM_PROXY_CLIENT_TRUSTSTORE_PATH:-/stroom-proxy/certs/ca.jks}"
          trustStorePassword: "${STROOM_PROXY_CLIENT_TRUSTSTORE_PASSWORD:-password}"
          trustStoreType: {{ .Values.trustStore.type | quote }}
          trustSelfSignedCertificates: {{ .Values.restClient.trustSelfSignedCertificates }}

      retryFrequency: {{ .Values.forwarding.retryFrequency | quote }}

      {{- with .Values.threads }}
      threads:
        examineSourceThreadCount: {{ .examineSource }}
        forwardRetryThreadCount: {{ .forwardRetry }}
        forwardThreadCount: {{ .forwardRetry }}
      {{- end }}

      useDefaultOpenIdCredentials: false