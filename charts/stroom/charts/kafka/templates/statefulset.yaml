apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kafka.fullname" . }}
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "kafka.fullname" . }}
  selector:
    matchLabels:
      {{- include "kafka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kafka.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "stroom.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: KAFKA_BROKER_ID
              value: {{ .Release.Name }}
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://{{ include "kafka.advertisedHostName" . }}:{{ .Values.global.kafka.port }}"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:{{ .Values.global.kafka.port }}"
            - name: KAFKA_CREATE_TOPICS
              value: {{ include "kafka.createTopics" . | trimSuffix "," }}
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: {{ include "zookeeper.connectionString" . | trimSuffix "," }}
            - name: KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS
              value: {{ .Values.zookeeper.sessionTimeout | quote }}
            - name: KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS
              value: {{ .Values.zookeeper.connectionTimeout | quote }}
          ports:
            - name: kafka
              containerPort: {{ .Values.global.kafka.port }}
              protocol: TCP
              # TODO: Implement probes
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
          volumeMounts:
            - mountPath: /kafka
              subPath: data
              name: data
            - mountPath: /opt/kafka/logs
              subPath: log
              name: data
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "kafka.labels" . | nindent 10 }}
      spec:
        volumeName: {{ .Values.volumeClaim.volumeName | quote }}
        storageClassName: {{ .Values.volumeClaim.storageClassName | quote }}
        selector:
          {{- with .Values.volumeClaim.selector.matchLabels }}
          matchLabels:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeClaim.selector.matchExpressions }}
          matchExpressions:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.volumeClaim.dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.volumeMode }}
        volumeMode:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.resources.requests.storage }}
          limits:
            storage: {{ .Values.resources.limits.storage }}