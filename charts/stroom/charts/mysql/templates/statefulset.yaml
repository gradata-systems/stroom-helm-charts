{{- $rootPasswordFile := "/etc/mysql/password/root" }}
{{- $serviceUserPasswordFile := "/etc/mysql/password/serviceuser" }}
{{- $passwordFileMode := 0400 }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "mysql.fullname" . }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ $rootPasswordFile }}
            - name: MYSQL_USER
              value: {{ .Values.global.mysql.users.service.name }}
            - name: MYSQL_PASSWORD
              value: {{ $serviceUserPasswordFile }}
          ports:
            - name: mysql
              containerPort: {{ .Values.port }}
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            initialDelaySeconds: 5*/}}
{{/*            tcpSocket:*/}}
{{/*              port: data*/}}
{{/*          readinessProbe:*/}}
{{/*            initialDelaySeconds: 15*/}}
{{/*            tcpSocket:*/}}
{{/*              port: data*/}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
            - mountPath: /etc/my.cnf
              subPath: my.cnf
              name: config
              readOnly: true
            - mountPath: /docker-entrypoint-initdb.d
              name: config-init
              readOnly: true
            - mountPath: {{ .Values.dataDir }}
              name: data
            - mountPath: {{ $rootPasswordFile }}
              subPath: root
              name: root-password
              readOnly: true
            - mountPath: {{ $serviceUserPasswordFile }}
              subPath: serviceuser
              name: serviceuser-password
              readOnly: true
      serviceAccountName: {{ include "stroom.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "mysql.fullname" . }}
        - name: config-init
          configMap:
            name: {{ include "mysql.fullname" . }}-init
        - name: root-password
          secret:
            secretName: {{ .Values.global.clusterSecret }}
            items:
              - key: mysql-root-password
                path: root
                mode: {{ $passwordFileMode }}
        - name: serviceuser-password
          secret:
            secretName: {{ .Values.global.clusterSecret }}
            items:
              - key: mysql-service-password
                path: serviceuser
                mode: {{ $passwordFileMode }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "mysql.labels" . | nindent 10 }}
      spec:
        volumeName: {{ .Values.volumeClaim.volumeName | quote }}
        storageClassName: {{ .Values.volumeClaim.storageClassName | quote }}
        selector:
          {{- with .Values.volumeClaim.selector.matchLabels }}
          matchLabels:
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.volumeClaim.selector.matchExpressions }}
          matchExpressions:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.volumeClaim.dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.volumeMode }}
        volumeMode:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.resources.requests.storage }}
          limits:
            storage: {{ .Values.resources.limits.storage }}