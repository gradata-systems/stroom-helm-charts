apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "stroom-proxy.fullname" . }}
  labels:
    {{- include "stroom-proxy.labels" . | nindent 4 }}
data:
  config.yml: |
    server:
      applicationContextPath: /
      adminContextPath: /proxyAdmin
      applicationConnectors:
        - type: http
          port: ${STROOM_PROXY_APP_PORT:-8090}
      adminConnectors:
        - type: http
          port: ${STROOM_PROXY_ADMIN_PORT:-8091}

      requestLog:
        appenders:
          - type: file
            currentLogFilename: /stroom-proxy/logs/access/access.log
            threshold: ALL
            queueSize: 256
            discardingThreshold: 0
            archive: true
            archivedLogFilenamePattern: /stroom-proxy/logs/access/access-%d{yyyy-MM-dd'T'HH:mm}.log.gz
            archivedFileCount: 100
            timeZone: UTC
            # For logFormat syntax in the access log see https://logback.qos.ch/manual/layouts.html (scroll to bottom)

    logging:
      level: ${STROOM_PROXY_LOGGING_LEVEL:- WARN}
      loggers:
        stroom: INFO
        io.dropwizard: INFO
        org.eclipse.jetty: INFO
        org.flywaydb: INFO
        "receive":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: /stroom-proxy/logs/receive/receive.log
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: true
              archivedLogFilenamePattern: /stroom-proxy/logs/receive/receive-%d{yyyy-MM-dd'T'HH:mm}.log.gz
              archivedFileCount: 100
              timeZone: UTC
              logFormat: "%msg%n"
        "send":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: /stroom-proxy/logs/send/send.log
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: true
              archivedLogFilenamePattern: /stroom-proxy/logs/send/send-%d{yyyy-MM-dd'T'HH:mm}.log.gz
              archivedFileCount: 100
              timeZone: UTC
              logFormat: "%msg%n"

      appenders:
        # stdout for docker
        # Comment out for non-dockered environments
        - type: console
          logFormat: "%highlight(%-6level) [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%green(%t)] %cyan(%logger) - %X{code} %msg %n"
          timeZone: UTC
          # Minute rolled files for stroom/datafeed, will be curl'd/deleted by stroom-log-sender
        - type: file
          currentLogFilename: /stroom-proxy/logs/app/app.log
          threshold: ALL
          queueSize: 256
          discardingThreshold: 0
          archive: true
          archivedLogFilenamePattern: /stroom-proxy/logs/app/app-%d{yyyy-MM-dd'T'HH:mm}.log.gz
          # One week using minute files
          archivedFileCount: 10080
          timeZone: UTC
          logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"
          # Size rolled logs for admins (10x100M), not curl'd to stroom
          # Un-comment for non-dockered environments
          #  - type: file
          #    currentLogFilename: /stroom-proxy/logs/app.log
          #    threshold: ALL
          #    queueSize: 256
          #    discardingThreshold: 0
          #    archive: true
          #    archivedLogFilenamePattern: /stroom-proxy/logs/app-%i.log
          #    archivedFileCount: 10
          #    maxFileSize: "100MB"
          #    timeZone: UTC
          #    logFormat: "%-6level [%d{\"yyyy-MM-dd\",UTC}] [%t] %logger - %X{code} %msg %n"

    mode: "proxy"

    proxyConfig:
      proxyContentDir: "${CONTENT_DIR:-/stroom-proxy/content}"

      # If you want to use a receipt policy then the RuleSet must exist
      # in Stroom and have the UUID as specified below in receiptPolicyUuid
      #  proxyRequestConfig:
      #    receiptPolicyUuid: "${RECEIPT_POLICY_UUID:-}"
      feedStatus:
        url: "${FEED_STATUS_URL:-http://stroom:8080/api/feedStatus/v1}"
        apiKey: "${FEED_STATUS_API_KEY:-}"
      forwardStreamConfig:
        forwardingEnabled: ${FORWARDING_ENABLED:-true}
        forwardDestinations:
          # If you want multiple forward destinations then you will need to edit this file directly
          # instead of using env var substitution
          - forwardUrl: "${FORWARD_URL:-https://nginx/stroom/datafeed}"
            sslConfig:
              keyStorePath: "${FORWARDING_KEYSTORE_PATH:-/stroom-proxy/certs/client.jks}"
              keyStorePassword: "${FORWARDING_KEYSTORE_PASSWORD:-password}"
              keyStoreType: "${FORWARDING_KEYSTORE_TYPE:-JKS}"
              trustStorePath: "${FORWARDING_TRUSTSTORE_PATH:-/stroom-proxy/certs/ca.jks}"
              trustStorePassword: "${FORWARDING_TRUSTSTORE_PASSWORD:-password}"
              trustStoreType: "${FORWARDING_TRUSTSTORE_TYPE:-JKS}"
              hostnameVerificationEnabled: ${FORWARDING_HOST_VERIFICATION_ENABLED:-true}
      proxyRepositoryConfig:
        storingEnabled: ${STORING_ENABLED:-true}
        repoDir: "${REPO_DIR:-/stroom-proxy/repo}"
        repositoryFormat: "${executionUuid}/${year}-${month}-${day}/${feed}/${pathId}/${id}"
        # Uncomment this for rolled repositories
        # rollCron: "* * *"
      proxyRepositoryReaderConfig:
        readCron: "${REPO_READ_CRON:-* * *}"
        forwardThreadCount: ${FORWARDING_THREAD_COUNT:-4}
        maxFileScan: ${REPO_MAX_FILE_SCAN:-100000}
        maxConcurrentMappedFiles: ${REPO_MAX_CONCURRENT_MAPPED_FILES:-100000}
        maxStreamSize: "${REPO_MAX_STREAM_SIZE:-1G}"
      logStreamConfig:
        metaKeys: "guid,feed,system,environment,remotehost,remoteaddress,remotedn,remotecertexpiry"
      #  contentSyncConfig:
      #    contentSyncEnabled: ${CONTENT_SYNC_ENABLED:-false}
      #    upstreamUrl:
      #      RuleSet: "${UPSTREAM_RULE_URL:-http://stroom:8080/api/ruleset/v1}"
      #      Dictionary: "${UPSTREAM_DICTIONARY_URL:-http://stroom:8080/api/dictionary/v1}"
      #    syncFrequency: 30000
      #    apiKey: "${SYNC_API_KEY:-}"
      # jerseyClient is used for making feed status REST calls
      jerseyClient:
        timeout: "${JERSEY_TIMEOUT:-10s}"
        connectionTimeout: "${JERSEY_CONN_TIMEOUT:-10s}"
        timeToLive: "${JERSEY_TIME_TO_LIVE:-1h}"
        cookiesEnabled: false
        maxConnections: "${JERSEY_MAX_CONNECTIONS:-1024}"
        maxConnectionsPerRoute: "${JERSEY_MAX_CONNECTIONS_PER_ROUTE:-1024}"
        keepAlive: "${JERSEY_KEEP_ALIVE:-0ms}"
        retries: "${JERSEY_RETRIES:-0}"
        tls:
          verifyHostname: ${JERSEY_VERIFY_HOSTNAME:-true}
          keyStorePath: "${STROOM_PROXY_CLIENT_KEYSTORE_PATH:-/stroom-proxy/certs/client.jks}"
          keyStorePassword: "${STROOM_PROXY_CLIENT_KEYSTORE_PASSWORD:-password}"
          keyStoreType: "${STROOM_PROXY_CLIENT_KEYSTORE_TYPE:-JKS}"
          trustStorePath: "${STROOM_PROXY_CLIENT_TRUSTSTORE_PATH:-/stroom-proxy/certs/ca.jks}"
          trustStorePassword: "${STROOM_PROXY_CLIENT_TRUSTSTORE_PASSWORD:-password}"
          trustStoreType: "${STROOM_PROXY_CLIENT_TRUSTSTORE_TYPE:-JKS}"
          trustSelfSignedCertificates: ${JERSEY_TRUST_SELF_SIGNED:-false}
