apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "stroom-proxy.fullname" . }}
  labels:
    {{- include "stroom-proxy.labels" . | nindent 4 }}
data:
  config.yml: |
    server:
      applicationContextPath: /
      adminContextPath: /proxyAdmin
      applicationConnectors:
        - type: {{ if .Values.tls.enabled }}https{{ else }}http{{ end }}
          port: {{ .Values.ports.app }}
          {{- if .Values.tls.enabled }}
          keyStoreType: {{ .Values.keyStore.type }}
          keyStorePath: {{ include "stroom-proxy.keyStorePath" . }}
          keyStorePassword: ${KEYSTORE_PASSWORD}
          trustStoreType: {{ .Values.trustStore.type }}
          trustStorePath: {{ include "stroom-proxy.trustStorePath" . }}
          trustStorePassword: ${TRUSTSTORE_PASSWORD}
          validateCerts: false
          {{- end }}
      adminConnectors:
        - type: http
          port: {{ .Values.ports.admin }}
      requestLog:
        {{- with .Values.logging }}
        appenders:
          - type: file
            currentLogFilename: {{ printf "%s/access/access.log" .baseDir }}
            threshold: ALL
            queueSize: 256
            discardingThreshold: 0
            archive: {{ .archive.enabled }}
            archivedLogFilenamePattern: {{ printf "%s/access/access-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
            archivedFileCount: {{ .archive.maxFileCount }}
            timeZone: {{ .timeZone }}
            logFormat: '%h %l "%u" [%t] "%r" %s %b "%i{Referer}" "%i{User-Agent}" %D'
        {{- end }}

    logging:
      {{- with .Values.logging }}
      level: {{ .level }}
      loggers:
        stroom: INFO
        io.dropwizard: INFO
        org.eclipse.jetty: INFO
        org.flywaydb: INFO
        "receive":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: {{ printf "%s/receive/receive.log" .baseDir }}
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: {{ .archive.enabled }}
              archivedLogFilenamePattern: {{ printf "%s/receive/receive-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
              archivedFileCount: {{ .archive.maxFileCount }}
              timeZone: {{ .timeZone }}
              logFormat: "%-6level [%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}] [%t] %logger - %X{code} %msg %n"
        "send":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: {{ printf "%s/send/send.log" .baseDir }}
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: {{ .archive.enabled }}
              archivedLogFilenamePattern: {{ printf "%s/send/send-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
              archivedFileCount: {{ .archive.maxFileCount }}
              timeZone: {{ .timeZone }}
              logFormat: "%-6level [%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}] [%t] %logger - %X{code} %msg %n"
      {{- end }}

      appenders:
        {{- with .Values.logging }}
        - type: console
          logFormat: "%highlight(%-6level) [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%green(%t)] %cyan(%logger) - %X{code} %msg %n"
          timeZone: {{ .timeZone }}
        - type: file
          currentLogFilename: {{ printf "%s/app/app.log" .baseDir }}
          threshold: ALL
          queueSize: 256
          discardingThreshold: 0
          archive: {{ .archive.enabled }}
          archivedLogFilenamePattern: {{ printf "%s/app/app-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
          archivedFileCount: {{ .archive.maxFileCount }}
          timeZone: {{ .timeZone }}
          logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"
        {{- end }}

    proxyConfig:
      feedStatus:
        url: {{ include "stroom-proxy.feedStatusUrl" . | quote }}
        apiKey: "${FEED_STATUS_API_KEY}"

      forwardStreamConfig:
        forwardingEnabled: {{ .Values.forwarding.enabled }}
        forwardDestinations:
          - forwardUrl: {{ include "stroom-proxy.forwardUrl" . }}
            sslConfig:
              keyStorePath: {{ include "stroom-proxy.keyStorePath" . }}
              keyStorePassword: "${KEYSTORE_PASSWORD}"
              keyStoreType: {{ .Values.keyStore.type }}
              trustStorePath: {{ include "stroom-proxy.trustStorePath" . }}
              trustStorePassword: "${TRUSTSTORE_PASSWORD}"
              trustStoreType: {{ .Values.trustStore.type }}
              hostnameVerificationEnabled: {{ .Values.forwarding.hostVerificationEnabled }}

      path:
        home: "/stroom-proxy/"
        temp: "/tmp/stroom-proxy"

      proxyRepositoryConfig:
        {{- with .Values.repository }}
        storingEnabled: {{ .storing.enabled }}
        repoDir: "/stroom-proxy/repo"
        format: {{ .format }}
        {{- end }}

      proxyRepositoryReaderConfig:
        {{- with .Values.repository }}
        readCron: {{ .reader.cronSchedule | quote }}
        maxFileScan: {{ .reader.maxFileScan }}
        maxConcurrentMappedFiles: {{ .reader.maxConcurrentMappedFiles }}
        maxStreamSize: {{ .aggregation.maxStreamSize | quote }}
        maxAggregation: {{ .aggregation.maxFilesPerAggregate }}
        {{- end }}
        forwardThreadCount: {{ .Values.forwarding.threadCount }}

      # restClient is used for making feed status REST calls
      restClient:
        {{- with .Values.restClient }}
        timeout: {{ .timeout | quote }}
        connectionTimeout: {{ .connectionTimeout | quote }}
        timeToLive: {{ .timeToLive | quote }}
        cookiesEnabled: false
        maxConnections: {{ .maxConnections }}
        maxConnectionsPerRoute: {{ .maxConnectionsPerRoute }}
        keepAlive: {{ .keepAlive | quote }}
        retries: {{ .retries }}
        {{- end }}
        tls:
          keyStorePath: {{ include "stroom-proxy.keyStorePath" . }}
          keyStorePassword: "${KEYSTORE_PASSWORD}"
          keyStoreType: {{ .Values.keyStore.type }}
          trustStorePath: {{ include "stroom-proxy.trustStorePath" . }}
          trustStorePassword: "${TRUSTSTORE_PASSWORD}"
          trustStoreType: {{ .Values.trustStore.type }}
          verifyHostname: {{ .Values.stroom.tls.verifyHostName }}
          trustSelfSignedCertificates: {{ .Values.stroom.tls.trustSelfSignedCertificates }}
