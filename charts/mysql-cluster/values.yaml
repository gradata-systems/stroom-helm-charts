# Default values for mysql-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: mysql/mysql-cluster
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""

mysql:
  # Uniquely identifies the cluster. Used to map pods to persistent volumes from the same cluster each time.
  clusterId: ""

  # User databases to create on startup
  initDatabases: []

  rootUser:
    # If set, use an existing secret to determine the initial password of the user 'root'
    secret:
      name: ""
      key: password

    # If set, assigns a password from plain text (only use this in development!)
    password: ""

    # Path to the file containing the root user password
    passwordFromFile: ""

    # If none of these are specified, a secret is generated automatically
  serviceUser:
    # If set, creates a separate user account with ownership over user application databases
    userName: stroom
    # Host the user is permitted to login from (defaults to any)
    host: "%"
    secret:
      name: ""
      key: password
    password: ""
    passwordFromFile: ""
  ports:
    management: 1186
    data: 2202
    mysqld: 3306

  node:
    dataDir: /var/lib/mysql
    connectionRetries: 10
  managementNode:
    replicas: 1
    port: 1186

    # Begin numbering management nodes from this value. Management nodes must be within the range 1 and 255
    nodeIdStartAt: 1

    # Resource limits imposed on management nodes
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
        storage: 100Mi

      limits:
        cpu: 200m
        memory: 200Mi
        storage: 100Mi
  dataNode:
    replicas: 3
    port: 2202

    # Start numbering from this value. Note: a data node ID must be less than 49
    nodeIdStartAt: 10

    # Avoid swapping memory to disk, for performance reasons
    lockPagesInMainMemory: true

    # Generally this should be >= the amount of data stored, plus a 20% margin
    dataMemory: 100M

    # Enable for Linux systems with kernel version >= 2.6
    oDirectWrites: false

    resources:
      requests:
        cpu: 1000m
        memory: 1Gi
        storage: 5Gi

      limits:
        cpu: 2000m
        memory: 2Gi
        storage: 10Gi
  serverNode:
    # Maximum number of slots available for SQL client nodes
    replicas: 2
    port: 3306
    nodeIdStartAt: 100

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
        storage: 1Gi

      limits:
        cpu: 1000m
        memory: 1Gi
        storage: 2Gi

# Name of the Kubernetes cluster. Must be correct otherwise MySQL will fail to resolve host addresses
clusterName: cluster.local

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Persistent volume claims in data, management and server nodes are generated from this template
volumeClaim:
  volumeName: ""
  storageClassName: ""
  selector:
    matchLabels: {}
    matchExpressions: {}
  dataSource: {}
  accessModes:
    - ReadWriteOnce
  volumeMode: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
