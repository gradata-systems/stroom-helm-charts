apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "stroom-node.fullname" . }}
  labels:
    {{- include "stroom-node.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "stroom-node.fullname" . }}
  selector:
    matchLabels:
      {{- include "stroom-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "stroom-node.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "stroom.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ADMIN_CONTEXT_PATH
              value: /stroomAdmin
            - name: API_GATEWAY_HOST
              value: {{ .Values.global.advertisedHost }}
            - name: API_GATEWAY_PORT
              value: {{ .Values.global.advertisedPort | quote }}
            - name: APPLICATION_CONTEXT_PATH
              value: /
            - name: DOCKER_HOST_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
            - name: DOCKER_HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
            - name: JAVA_OPTS
              value: {{ .Values.javaOpts }}
            - name: STROOM_APP_PORT
              value: {{ .Values.global.stroomNode.ports.app | quote }}
            - name: STROOM_ADMIN_PORT
              value: {{ .Values.global.stroomNode.ports.admin | quote }}
            - name: STROOM_DEBUG_PORT
              value: {{ .Values.global.stroomNode.ports.debug | quote }}
            - name: STROOM_NODE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
            - name: STROOM_JDBC_DRIVER_URL
              value: {{ printf "jdbc:mysql://%s/%s?useUnicode=yes&characterEncoding=UTF-8" (include "mysql.connectionAddress" .) .Values.global.mysql.databases.stroom }}
            - name: STROOM_JDBC_DRIVER_CLASS_NAME
              value: {{ .Values.jdbcDriver }}
            - name: STROOM_JDBC_DRIVER_USERNAME
              value: {{ .Values.global.mysql.users.service.name }}
            - name: STROOM_JDBC_DRIVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "stroom.globalSecretName" . }}
                  key: mysql-service-password
            - name: STROOM_STATISTICS_JDBC_DRIVER_CLASS_NAME
              value: com.mysql.cj.jdbc.Driver
            - name: STROOM_STATISTICS_JDBC_DRIVER_URL
              value: {{ printf "jdbc:mysql://%s/%s?useUnicode=yes&characterEncoding=UTF-8" (include "mysql.connectionAddress" .) .Values.global.mysql.databases.stats }}
            - name: STROOM_STATISTICS_JDBC_DRIVER_USERNAME
              value: {{ .Values.global.mysql.users.service.name }}
            - name: STROOM_STATISTICS_JDBC_DRIVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "stroom.globalSecretName" . }}
                  key: mysql-service-password
            - name: STROOM_LOGGING_LEVEL
              value: {{ .Values.loggingLevel }}
            - name: STROOM_CONTENT_PACK_IMPORT_ENABLED
              value: {{ .Values.contentPackImportEnabled | quote }}
            - name: STROOM_CREATE_DEFAULT_INDEX_VOLUMES
              value: {{ .Values.createVolumes.index | quote }}
            - name: STROOM_CREATE_DEFAULT_STREAM_VOLUMES
              value: {{ .Values.createVolumes.stream | quote }}
            - name: STROOM_SERVICE_DISCOVERY_ENABLED
              value: {{ .Values.serviceDiscovery.enabled | quote }}
            - name: STROOM_SERVICE_DISCOVERY_ZOOKEEPER_URL
              value: {{ include "zookeeper.connectionString" . | trimSuffix "," }}
            - name: STROOM_TEMP
              value: {{ .Values.stroomTempDir }}
          volumeMounts:
            - mountPath: /stroom/config/config.yml
              subPath: config.yml
              name: config
              readOnly: true
            - mountPath: /stroom/logs
              subPath: logs
              name: data
            - mountPath: /stroom/output
              subPath: output
              name: data
            - mountPath: /stroom/tmp
              subPath: tmp
              name: data
            - mountPath: /stroom/proxy_repo
              subPath: proxy-repo
              name: data
            - mountPath: /stroom/reference_data
              subPath: reference-data
              name: data
            - mountPath: /stroom/search_results
              subPath: search-results
              name: data
            - mountPath: /stroom/volumes
              name: stroom-shared
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            {{- range $name, $number := .Values.global.stroomNode.ports }}
            - name: {{ $name }}
              containerPort: {{ $number }}
              protocol: TCP
            {{- end }}
          startupProbe:
            {{- with .Values.startupProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /stroomAdmin/healthcheck
              port: admin
            {{- end }}
          livenessProbe:
            {{- with .Values.livenessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            httpGet:
              path: /stroomAdmin/healthcheck
              port: admin
            {{- end }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
      volumes:
        - name: config
          configMap:
            name: {{ include "stroom-node.fullname" . }}
        {{- with .Values.sharedDataVolume }}
        - name: stroom-shared
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- with .Values.volumeClaims.nodeData }}
    - metadata:
        name: data
        labels:
          {{- include "stroom-node.labels" $ | nindent 10 }}
      spec:
        volumeName: {{ .volumeName | quote }}
        storageClassName: {{ .storageClassName | quote }}
        selector:
          {{- with .selector.matchLabels }}
          matchLabels:
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .selector.matchExpressions }}
          matchExpressions:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .volumeMode }}
        volumeMode:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          requests:
            storage: {{ $.Values.resources.requests.storage }}
          limits:
            storage: {{ $.Values.resources.limits.storage }}
  {{- end }}