# Default values for stroom-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gchq/stroom-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

busybox:
  repository: busybox
  tag: 1.36.1

nameOverride: ""
fullnameOverride: ""

logging:
  level: WARN
  archive:
    enabled: true
    maxFileCount: 3600
  timeZone: UTC
  baseDir: /stroom-proxy/logs
  fileDateFormat: yyyy-MM-dd-HH-mm

  # Include the following meta keys in log entries
  includeMetaKeys:
    - GUID
    - ReceiptId
    - Feed
    - System
    - Environment
    - RemoteHost
    - RemoteAddress
    - RemoteDN
    - RemoteCertExpiry

logSender:
  enabled: true
  image:
    repository: gchq/stroom-log-sender
    tag: v2.2.0
  cronSchedule: "* * * * *"
  fileRegex: .*\.gz$
  sources: # Map of subdirectories to feed names
    app: STROOM_PROXY-APP-EVENTS
    access: STROOM_PROXY-ACCESS-EVENTS
    receive: STROOM_PROXY-RECEIVE-EVENTS
    send: STROOM_PROXY-SEND-EVENTS
  attributes:
    system: Stroom Proxy v7
    environment: Production
  extraHeaders: { }
#    SecurityDomain: Unclassified
  destinationUrl: https://stroom.example.com/stroom/datafeed
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 64Mi

stroom:
  baseUri: http://stroom-node.stroom.svc:8080
  paths:
    datafeed: /stroom/noauth/datafeed
    feedStatus: /api/feedStatus/v2
  feedStatus:
    enabled: false
    # Stroom API key to enable feed status lookups.
    # User needs the following permissions assigned in Stroom:
    # - Application: `Check Receipt Status`
    # - Document: `Use`
    apiKeySecretRef:
      name: ""
      key: ""
    httpClient:
      connectionTimeout: 1s
      timeout: 1s
      timeToLive: 1h
      keepAlive: 0ms
      retries: 0
      tls:
        verifyHostName: true
        trustSelfSignedCertificates: false

receive:
  authentication:
    enabled: true
    certificate:
      distinguishedNameFormat: OPEN_SSL # OPEN_SSL | LDAP
      distinguishedNameHeader: ssl-client-subject-dn
      header: ssl-client-cert
      verifyHostName: false

aggregation:
  enabled: true
  frequency: PT10M
  # Maximum number of files to include in a single aggregate, before rolling over
  maxItemsPerAggregate: 10000
  # Stream size (uncompressed) to break at when building an aggregate
  maxUncompressedByteSize: 1.0G
  splitSources: true

forwarding:
  # Whether to forward to a custom HTTPS destination, such as another Stroom proxy
  enabled: true

  # Override the forwarding URL. By default, `{stroom.baseUri}/stroom/noauth/datafeed` is used.
  url: ""

  # Number of threads to forward with
  threadCount: 4

  directoryFormat: "${feed}/${year}-${month}-${day}"

  delay: PT0S
  maxRetryAge: P7D
  maxRetryDelay: P1D
  queueAndRetryEnabled: true
  retryDelay: PT10M
  retryDelayGrowthFactor: 1.0

  httpClient:
    connectionTimeout: PT10S
    retries: 0
    timeToLive: PT1H
    timeout: PT1H
    keepAlive: PT0S
    validateAfterInactivityPeriod: PT0S
    tls:
      # Perform X.509 host verification
      hostVerificationEnabled: true

# Override Dropwizard server properties: https://www.dropwizard.io/en/latest/manual/configuration.html#all
serverProperties: { }
#  idleThreadTimeout: 1 minute

takeOwnershipOnStartup: false

volumeClaims:
  # Local proxy storage. Recommend using fast storage tier especially when aggregation is enabled
  data: { }
#    storageClassName: ""
#    selector:
#      matchLabels: { }
#      matchExpressions: { }
#    accessModes:
#      - ReadWriteOnce
#    resources:
#      requests:
#        storage: ""
#      limits:
#        storage: ""

extraEnv: [ ]
#  - name: ENV_VAR
#    value: "123"

extraVolumes: [ ]
#  - name: data
#    nfs:
#      server: fs.example.com
#      path: /stroom-proxy

extraVolumeMounts: [ ]
#  - mountPath: /stroom-proxy/data
#    name: data

tls:
  # Existing TLS Secret containing the following: tls.crt, tls.key and ca.crt
  secretName: ""
  # Secret containing the password to use for generating the keystore and truststore
  keystorePasswordSecretRef:
    name: ""
    key: ""

ports:
  app: 8443
  admin: 8090

service:
  annotations: { }
  type: ClusterIP
  externalTrafficPolicy: ""
  nodePort: ""

ingress:
  enabled: true
  className: nginx
  hostName: stroom-proxy.example.com
  annotations: { } # Extra annotations to add to the Ingress resource
  # Maximum size of an HTTP POST to the ingress. Ensure this is large enough to cater for posted event files
  maxClientBodySize: 10g
  tls:
    secretName: ""

javaOpts: -Xms512m -Xmx1g

resources:
  requests:
    cpu: 1000m
    memory: 1Gi

  limits:
    cpu: 2000m
    memory: 2Gi

probeTimings:
  startup:
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 5
    failureThreshold: 10
  readiness:
    initialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 10
    failureThreshold: 3
  liveness:
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 10
    failureThreshold: 3

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  runAsNonRoot: true

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

nodeSelector: { }
tolerations: [ ]
affinity: { }
