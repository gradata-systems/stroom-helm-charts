{{- $nodeType := "management" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql-cluster.fullname" . }}-{{ $nodeType }}
  labels:
    {{- include "mysql-cluster.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mysql.managementNode.replicas }}
  serviceName: {{ include "mysql-cluster.fullname" . }}-{{ $nodeType }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "mysql-cluster.selectorLabels" . | nindent 6 }}
      nodeType: {{ $nodeType }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql-cluster.selectorLabels" . | nindent 8 }}
        nodeType: {{ $nodeType }}
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - ndb_mgmd
            - --ndb-nodeid=1
            - --connect-retries={{ .Values.mysql.node.connectionRetries }}
          ports:
            - name: {{ $nodeType }}
              containerPort: {{ .Values.mysql.ports.management }}
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            initialDelaySeconds: 5*/}}
{{/*            tcpSocket:*/}}
{{/*              port: management*/}}
{{/*          readinessProbe:*/}}
{{/*            initialDelaySeconds: 15*/}}
{{/*            tcpSocket:*/}}
{{/*              port: management*/}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/my.cnf
              subPath: my.cnf
              name: config
              readOnly: true
            - mountPath: /etc/mysql-cluster.cnf
              subPath: mysql-cluster.cnf
              name: config
              readOnly: true
            - mountPath: {{ .Values.mysql.node.dataDir }}
              name: data
      serviceAccountName: {{ include "mysql-cluster.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "mysql-cluster.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "mysql-cluster.labels" . | nindent 10 }}
      spec:
        volumeName: {{ .Values.volumeClaim.volumeName | quote }}
        storageClassName: {{ .Values.volumeClaim.storageClassName | quote }}
        selector:
          matchLabels:
            mysql/clusterId: {{ $.Values.mysql.clusterId }}
            mysql/nodeType: {{ $nodeType }}
            {{- with .Values.volumeClaim.selector.matchLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.volumeClaim.selector.matchExpressions }}
          matchExpressions:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.volumeClaim.dataSource }}
        dataSource:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.volumeMode }}
        volumeMode:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeClaim.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}