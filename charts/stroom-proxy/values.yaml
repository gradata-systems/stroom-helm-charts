# Default values for stroom-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: gchq/stroom-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nameOverride: ""
fullnameOverride: ""

advertisedHost: stroom-proxy.example.com

loggingLevel: INFO

stroom:
  host: stroom-node.stroom.svc
  port: 8080
  apiScheme: http # http, https
  apiKey:
    # Requires:
    # - stroom_api_key - API key issued by Stroom, to enable feed status lookups. Secret key is `stroom_api_key`
    secretRef:
      secretName: ""
      key: ""

storing:
  enabled: true

forwarding:
  # Whether to forward to another proxy. If disabled, `clientKeyStore` and `trustStore` options are ignored.
  enabled: true

  scheme: http # http, https

  retryFrequency: PT1M

  # Number of threads to forward with
  maxThreads: 4

db:
  dbDir: db

repository:
  cleanupFrequency: PT1H
  dirCleanDelay: PT10S
  format: ${executionUuid}/${year}-${month}-${day}/${feed}/${pathId}/${id}
  lockDeleteAge: PT1H
  repoDir: repo
  storingEnabled: true
  scanning:
    enabled: true
    frequency: PT1M

  aggregation:
    enabled: true
    frequency: PT1M
    maxAge: PT10M

    # Maximum number of files to include in a single aggregate, before rolling over
    maxItems: 10000

    # Stream size (uncompressed) to break at when building an aggregate
    maxUncompressedSizeBytes: 1.0G

# Used for client connections to Stroom or a downstream proxy
clientKeyStore:
  type: "" # PKCS12, JKS, ...
  secretRef:
    secretName: ""
    key: "keystore.jks" # keystore.jks
  passwordSecretRef:
    secretName: ""
    key: "password"

trustStore:
  type: "" # PKCS12, JKS
  secretRef:
    secretName: ""
    key: "" # truststore.jks
  passwordSecretRef:
    secretName: "truststore.jks"
    key: "password"

# Maximum size of an HTTP POST to the ingress. Ensure this is large enough to cater for posted event files
maxClientBodySize: 10g

restClient:
  connectionTimeout: PT3S
  verifyHostname: true
  trustSelfSignedCertificates: false

ports:
  app: 8090
  admin: 8091
  debug: 10766

volumeClaims:
  # Local proxy storage. Recommend using fast storage tier especially when aggregation is enabled
  localData:
    volumeName: ""
    storageClassName: ""
    selector:
      matchLabels: {}
      matchExpressions: {}
    dataSource: {}
    accessModes:
      - ReadWriteOnce
    volumeMode: {}

sharedProxyRepoVolume: {}
  # nfs:
  #   server: file-server.example.com
  #   path: /data

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
  tls:
    secretName: ""

javaOpts: -Xms512m -Xmx1g -Xrunjdwp:server=y,transport=dt_socket,address=10765,suspend=n

resources:
  requests:
    cpu: 1000m
    memory: 1Gi
    storage: 1Gi

  limits:
    cpu: 2000m
    memory: 2Gi
    storage: 2Gi

readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 10
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
