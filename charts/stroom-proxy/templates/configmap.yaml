apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "stroom-proxy.fullname" . }}
  labels:
    {{- include "stroom-proxy.labels" . | nindent 4 }}
data:
  config.yml: |
    server:
      applicationContextPath: /
      adminContextPath: /proxyAdmin
      {{- with .Values.serverProperties }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      applicationConnectors:
        - type: http
          port: {{ .Values.ports.app }}
          {{- if .Values.tls.enabled }}
          keyStoreType: {{ .Values.keyStore.type }}
          keyStorePath: {{ include "stroom-proxy.keyStorePath" . }}
          keyStorePassword: ${KEYSTORE_PASSWORD}
          trustStoreType: {{ .Values.trustStore.type }}
          trustStorePath: {{ include "stroom-proxy.trustStorePath" . }}
          trustStorePassword: ${TRUSTSTORE_PASSWORD}
          validateCerts: false
          {{- end }}
      adminConnectors:
        - type: http
          port: {{ .Values.ports.admin }}
      requestLog:
        {{- with .Values.logging }}
        appenders:
          - type: file
            currentLogFilename: {{ printf "%s/access/access.log" .baseDir }}
            threshold: ALL
            queueSize: 256
            discardingThreshold: 0
            archive: {{ .archive.enabled }}
            archivedLogFilenamePattern: {{ printf "%s/access/access-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
            archivedFileCount: {{ .archive.maxFileCount }}
            timeZone: {{ .timeZone }}
            logFormat: '%h %l "%u" [%t] "%r" %s %b "%i{Referer}" "%i{User-Agent}" %D'
        {{- end }}

    {{- if .Values.stroom.feedStatus.enabled }}
    jerseyClients:
      default:
        {{- with .Values.stroom.feedStatus }}
        timeout: {{ .timeout }}
        connectionTimeout: {{ .connectionTimeout }}
        timeToLive: {{ .timeToLive }}
        cookiesEnabled: false
        maxConnections: 1024
        maxConnectionsPerRoute: 1024
        keepAlive: 0ms
        retries: 0
        {{- end }}
        tls:
          keyStorePath: {{ include "stroom-proxy.keyStorePath" . }}
          keyStorePassword: "${KEYSTORE_PASSWORD}"
          keyStoreType: {{ .Values.keyStore.type }}
          trustStorePath: {{ include "stroom-proxy.trustStorePath" . }}
          trustStorePassword: "${TRUSTSTORE_PASSWORD}"
          trustStoreType: {{ .Values.trustStore.type }}
          verifyHostname: {{ .Values.stroom.tls.verifyHostName }}
          trustSelfSignedCertificates: {{ .Values.stroom.tls.trustSelfSignedCertificates }}
    {{- end }}

    logging:
      {{- with .Values.logging }}
      level: {{ .level }}
      loggers:
        stroom: INFO
        io.dropwizard: INFO
        org.eclipse.jetty: INFO
        org.flywaydb: INFO
        "receive":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: {{ printf "%s/receive/receive.log" .baseDir }}
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: {{ .archive.enabled }}
              archivedLogFilenamePattern: {{ printf "%s/receive/receive-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
              archivedFileCount: {{ .archive.maxFileCount }}
              timeZone: {{ .timeZone }}
              logFormat: "%-6level [%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}] [%t] %logger - %X{code} %msg %n"
        "send":
          level: INFO
          additive: false
          appenders:
            - type: file
              currentLogFilename: {{ printf "%s/send/send.log" .baseDir }}
              threshold: ALL
              queueSize: 256
              discardingThreshold: 0
              archive: {{ .archive.enabled }}
              archivedLogFilenamePattern: {{ printf "%s/send/send-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
              archivedFileCount: {{ .archive.maxFileCount }}
              timeZone: {{ .timeZone }}
              logFormat: "%-6level [%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z'}] [%t] %logger - %X{code} %msg %n"
      {{- end }}

      appenders:
        {{- with .Values.logging }}
        - type: console
          logFormat: "%highlight(%-6level) [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%green(%t)] %cyan(%logger) - %X{code} %msg %n"
          timeZone: {{ .timeZone }}
        - type: file
          currentLogFilename: {{ printf "%s/app/app.log" .baseDir }}
          threshold: ALL
          queueSize: 256
          discardingThreshold: 0
          archive: {{ .archive.enabled }}
          archivedLogFilenamePattern: {{ printf "%s/app/app-%%d{%s}.log.gz" .baseDir .fileDateFormat }}
          archivedFileCount: {{ .archive.maxFileCount }}
          timeZone: {{ .timeZone }}
          logFormat: "%-6level [%d{\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",UTC}] [%t] %logger - %X{code} %msg %n"
        {{- end }}

    proxyConfig:
      aggregator:
        {{- with .Values.repository.aggregation }}
        enabled: {{ .enabled }}
        aggregationFrequency: {{ .frequency | quote }}
        maxAggregateAge: {{ .maxAge | quote }}
        maxItemsPerAggregate: {{ .maxItems }}
        maxUncompressedByteSize: {{ .maxUncompressedSizeBytes | quote }}
        {{- end }}

      feedStatus:
        {{- if .Values.stroom.feedStatus.enabled }}
        url: {{ include "stroom-proxy.feedStatusUrl" . | quote }}
        apiKey: "${FEED_STATUS_API_KEY}"
        {{- else }}
        url: ""
        apiKey: ""
        {{- end }}

      {{- if .Values.forwarding.enabled }}
      forwardHttpDestinations:
        - forwardUrl: {{ include "stroom-proxy.forwardUrl" . }}
          enabled: {{ .Values.forwarding.enabled }}
          {{- with .Values.forwarding.maxChunkSize }}
          forwardChunkSize: {{ . | int64 }}
          {{- end }}
          sslConfig:
            keyStorePath: {{ include "stroom-proxy.keyStorePath" . }}
            keyStorePassword: "${KEYSTORE_PASSWORD}"
            keyStoreType: {{ .Values.keyStore.type }}
            trustStorePath: {{ include "stroom-proxy.trustStorePath" . }}
            trustStorePassword: "${TRUSTSTORE_PASSWORD}"
            trustStoreType: {{ .Values.trustStore.type }}
            hostnameVerificationEnabled: {{ .Values.forwarding.tls.verifyHostName }}
      {{- end }}

      path:
        home: "/stroom-proxy/"
        temp: "/tmp/stroom-proxy"

      db:
        dbDir: db

      repository:
        {{- with .Values.repository }}
        repoDir: repo
        storingEnabled: {{ .storing.enabled }}
        {{- end }}

      {{- with .Values.threads }}
      threads:
        examineSourceThreadCount: {{ .examineSource }}
        forwardRetryThreadCount: {{ .forwardRetry }}
        forwardThreadCount: {{ .forwarding }}
      {{- end }}

      useDefaultOpenIdCredentials: false

  {{- if .Values.logSender.enabled }}
    log-sender-headers.txt: |
      {{- range $key, $value := .Values.logSender.extraHeaders }}
      {{ printf "%s:%s" $key $value }}
      {{- end }}

    log-sender-crontab.txt: |-
      {{- range $subDir, $feedName := .Values.logSender.sources }}
      {{ $.Values.logSender.cronSchedule }} ${LOG_SENDER_SCRIPT} "${BASE_LOGS_DIR}/{{ $subDir }}" {{ $feedName | quote }} "${DESTINATION_URL}" \
      --file-regex "${FILE_REGEX}" \
      --system {{ $.Values.logSender.attributes.system | quote }} \
      --environment {{ $.Values.logSender.attributes.environment | quote }} \
      -H "OriginalHost:${HOSTNAME}" \
      --headers "${LOG_SENDER_HEADERS}" \
      --delete-after-sending --no-secure > /dev/stdout
      {{- end }}
    {{- end }}
